{"ast":null,"code":"var _jsxFileName = \"/Users/ebr/code/webgalery/src/pages/Slideshow.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Image from '../components/Image';\nimport { db } from '../config/firebase';\nimport '../css/App.css';\nimport { getDocs, collection } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Slideshow() {\n  _s();\n  const defaultimage = {\n    _location: {\n      path: \"js/1\"\n    }\n  };\n  const [imageList, setImageList] = useState([]);\n  const [currentimage, setCurrentImage] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      const newImages = [];\n      const querySnapshot = await getDocs(collection(db, \"js\"));\n      querySnapshot.forEach(doc => {\n        console.log(`${doc.id} => ${doc.data().description}`);\n        newImages.push(doc.data());\n      });\n      setImageList(newImages);\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImage(currentimage => currentimage === imageList.length - 1 ? 0 : currentimage + 1);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [imageList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-list\",\n    children: imageList.map((element, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: element.url,\n        className: currentimage == index ? \"active\" : \"disable\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: element.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Slideshow, \"nruLxoFwk3K5ggEqK+HHayns7kY=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useEffect","useState","Image","db","getDocs","collection","jsxDEV","_jsxDEV","Fragment","_Fragment","Slideshow","_s","defaultimage","_location","path","imageList","setImageList","currentimage","setCurrentImage","fetchData","newImages","querySnapshot","forEach","doc","console","log","id","data","description","push","interval","setInterval","length","clearInterval","className","children","map","element","index","src","url","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ebr/code/webgalery/src/pages/Slideshow.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Image from '../components/Image';\nimport { db } from '../config/firebase';\nimport '../css/App.css';\nimport { getDocs, collection } from \"firebase/firestore\";\n\nfunction Slideshow() {\n  const defaultimage = { _location: { path: \"js/1\" } }\n  const [imageList, setImageList] = useState([]);\n  const [currentimage, setCurrentImage] = useState(0);\n\n  useEffect(() =>{\n    async function fetchData() {\n      const newImages = [];\n      const querySnapshot = await getDocs(collection(db, \"js\"));\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} => ${doc.data().description}`);\n        newImages.push(doc.data());\n      });\n      setImageList(newImages);\n    }\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImage((currentimage) => (currentimage === imageList.length - 1 ? 0 : currentimage + 1));\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [imageList])\n\n  return (\n    <div className=\"image-list\">\n      {\n        imageList.map((element, index) => (\n          <>\n          <img key={index} src={element.url} className={currentimage == index ? \"active\" :  \"disable\"} />\n          <p className='description'>{element.description}</p>\n          </>\n        ))\n      }\n    </div>\n  );\n}\nexport default Slideshow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,EAAE,QAAQ,oBAAoB;AACvC,OAAO,gBAAgB;AACvB,SAASC,OAAO,EAAEC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,YAAY,GAAG;IAAEC,SAAS,EAAE;MAAEC,IAAI,EAAE;IAAO;EAAE,CAAC;EACpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnDD,SAAS,CAAC,MAAK;IACb,eAAemB,SAASA,CAAA,EAAG;MACzB,MAAMC,SAAS,GAAG,EAAE;MACpB,MAAMC,aAAa,GAAG,MAAMjB,OAAO,CAACC,UAAU,CAACF,EAAE,EAAE,IAAI,CAAC,CAAC;MACzDkB,aAAa,CAACC,OAAO,CAAEC,GAAG,IAAK;QAC7BC,OAAO,CAACC,GAAG,CAAE,GAAEF,GAAG,CAACG,EAAG,OAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACC,WAAY,EAAC,CAAC;QACrDR,SAAS,CAACS,IAAI,CAACN,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;MACFX,YAAY,CAACI,SAAS,CAAC;IACzB;IACAD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,MAAM8B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCb,eAAe,CAAED,YAAY,IAAMA,YAAY,KAAKF,SAAS,CAACiB,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGf,YAAY,GAAG,CAAE,CAAC;IACnG,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMgB,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;EAEf,oBACER,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,EAEvBpB,SAAS,CAACqB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B/B,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACA5B,OAAA;QAAiBgC,GAAG,EAAEF,OAAO,CAACG,GAAI;QAACN,SAAS,EAAEjB,YAAY,IAAIqB,KAAK,GAAG,QAAQ,GAAI;MAAU,GAAlFA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+E,CAAC,eAC/FrC,OAAA;QAAG2B,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEE,OAAO,CAACT;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eAClD,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAACjC,EAAA,CArCQD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAsClB,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}