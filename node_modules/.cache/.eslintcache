[{"/Users/ebr/code/webgalery/src/index.js":"1","/Users/ebr/code/webgalery/src/App.js":"2","/Users/ebr/code/webgalery/src/reportWebVitals.js":"3","/Users/ebr/code/webgalery/src/components/Image.js":"4","/Users/ebr/code/webgalery/src/pages/Form.js":"5","/Users/ebr/code/webgalery/src/pages/Slideshow.js":"6","/Users/ebr/code/webgalery/src/config/firebase.js":"7","/Users/ebr/code/webgalery/src/pages/Start.js":"8"},{"size":539,"mtime":1710959880427,"results":"9","hashOfConfig":"10"},{"size":676,"mtime":1710959880425,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1710959880427,"results":"12","hashOfConfig":"10"},{"size":660,"mtime":1710966892702,"results":"13","hashOfConfig":"10"},{"size":3439,"mtime":1710969900232,"results":"14","hashOfConfig":"10"},{"size":1406,"mtime":1710970736421,"results":"15","hashOfConfig":"10"},{"size":894,"mtime":1710965110637,"results":"16","hashOfConfig":"10"},{"size":2474,"mtime":1710968852521,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z49w34",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/ebr/code/webgalery/src/index.js",[],[],"/Users/ebr/code/webgalery/src/App.js",["47","48","49","50"],[],"import React, { useEffect, useState } from 'react';\nimport Form from './pages/Form';\nimport Image from './components/Image';\nimport { storage } from './config/firebase';\nimport './css/App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Slideshow from './pages/Slideshow';\nimport Start from './pages/Start';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Start />}/>\n          <Route path=\"upload\" element={<Form />} />\n          <Route path=\"slideshow\" element={<Slideshow />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\nexport default App;\n","/Users/ebr/code/webgalery/src/reportWebVitals.js",[],[],"/Users/ebr/code/webgalery/src/components/Image.js",["51","52","53"],[],"import React, { useEffect, useState } from 'react';\nimport Form from '../pages/Form';\nimport { storage } from '../config/firebase';\nimport { ref,  getDownloadURL } from \"firebase/storage\";\n\nconst Image = ({key, src, active}) => {\n const [url, setUrl] = useState(\"https://bbkmf.ch/wp-content/plugins/embed-any-document/images/loading.svg\");\n\nuseEffect(() => {\n  try {\n  const storageRef = ref(storage, src._location.path_);\n  getDownloadURL(storageRef).then((downloadURL) => {\n    setUrl(downloadURL)\n  });\n} catch (error) {\n  console.log(error);\n}\n}, [])\n\n  return (\n    <img src={url} className={active ? \"active\" :  \"disable\"}/>\n  );\n}\nexport default Image;\n","/Users/ebr/code/webgalery/src/pages/Form.js",["54","55","56","57","58","59","60"],[],"import { useEffect, useState } from \"react\";\nimport { storage, db} from '../config/firebase';\nimport '../css/Form.css';\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\"; \n\nconst Form = () => {\n  const [imgUrl, setImgUrl] = useState(null);\n  const [progresspercent, setProgresspercent] = useState(0);\n  const [formstate, setFormstate] = useState(\"chooseImage\");\n  \n\n  //new\n  //chooseImage - bild w채hlen\n  // upload - show progress bar\n  //description  beschreibung hinzuf체gen und senden\n  //success - bild anzeigen und buttons - galerie gehen der neuen bild hochladen\n \n  const [description, setDescription] = useState(\"\");\n\n\n  const uploadImage = (selectedFile) => {\n    setFormstate(\"upload\");\n    const storageRef = ref(storage, `js/${selectedFile.name}`);\n    const uploadTask = uploadBytesResumable(storageRef, selectedFile);\n\n    uploadTask.on(\"state_changed\",\n      (snapshot) => {\n        const progress =\n          Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        setProgresspercent(progress);\n      },\n      (error) => {\n        alert(error);\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n          setImgUrl(downloadURL)\n          setFormstate(\"description\")\n        });\n      }\n    );\n  }\n  const selectfile = (e) => {\n    setFormstate(\"upload\");\n    uploadImage(e.target.files[0]);\n  }\n  const goback = () => {\n    setFormstate(\"chooseImage\");\n    setImgUrl(null);\n    setProgresspercent(0);\n  }\n\n  const changeDescription = e => {\n    setDescription(e.target.value)\n  }\n  const upload = async event => {\n    event.preventDefault()\n    try {\n      const docRef = await addDoc(collection(db, \"js\"), {\n        url: imgUrl,\n        description: description\n    });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n    console.log('Wird gesendet...')\n    console.log(imgUrl)\n    console.log(description)\n    setFormstate(\"done\")\n\n  }\n\n  return (\n    <div className=\"upload-form\">\n      <form onSubmit={upload} className='form'>\n        <div className='form-circle'>\n          {formstate == \"chooseImage\" &&\n            <>\n              <div className='circle-content'>\n                <div className='circle-icon'></div>\n                <h2>Datei <br></br>ausw채hlen</h2>\n              </div>\n              <input onChange={selectfile} type='file' />\n\n            </>\n          }\n          {formstate == \"upload\" &&\n            <div className=\"progressbar\"><h2>{progresspercent}%</h2></div>\n          }\n          {formstate == \"description\" &&\n          <>\n          <div className=\"done\" style={{ backgroundImage: `url(${imgUrl})` }}><div className=\"done-icon\"></div></div>\n          <div style={{height: \"20px\"}}></div>\n          \n          </>\n          }\n        </div>\n        {formstate == \"description\" &&\n        <input type=\"text\" id=\"description\" placeholder=\"Grussbotschaft, Beschreibung etc.\" value={description} onChange={changeDescription}></input>\n      } \n      \n      {formstate == \"description\" &&\n      <button type='submit' className=\"hochladen\">In Diashow einf체gen</button>\n        }\n        </form>\n      {formstate == \"done\" &&\n      <>\n        <button onClick={goback}>Neues Foto hochladen</button>\n      </>\n      }\n    </div>\n  );\n}\nexport default Form;","/Users/ebr/code/webgalery/src/pages/Slideshow.js",["61","62","63"],[],"import React, { useEffect, useState } from 'react';\nimport Image from '../components/Image';\nimport { db } from '../config/firebase';\nimport '../css/App.css';\nimport { getDocs, collection } from \"firebase/firestore\";\n\nfunction Slideshow() {\n  const defaultimage = { _location: { path: \"js/1\" } }\n  const [imageList, setImageList] = useState([]);\n  const [currentimage, setCurrentImage] = useState(0);\n\n  useEffect(() =>{\n    async function fetchData() {\n      const newImages = [];\n      const querySnapshot = await getDocs(collection(db, \"js\"));\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} => ${doc.data().description}`);\n        newImages.push(doc.data());\n      });\n      setImageList(newImages);\n    }\n    fetchData();\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentImage((currentimage) => (currentimage === imageList.length - 1 ? 0 : currentimage + 1));\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [imageList])\n\n  return (\n    <div className=\"image-list\">\n      {\n        imageList.map((element, index) => (\n          <div className={['imageContainer', index === currentimage ? 'active' : 'disable'].join(' ')} key={index} >\n          <img key={index} src={element.url} />\n          <h2 className='description'>{element.description}</h2>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\nexport default Slideshow;\n","/Users/ebr/code/webgalery/src/config/firebase.js",[],[],"/Users/ebr/code/webgalery/src/pages/Start.js",["64","65","66","67","68","69","70","71"],[],"import React, { useEffect, useState } from 'react';\nimport Image from '../components/Image';\nimport { storage, db } from '../config/firebase';\nimport '../css/App.css';\nimport { getStorage, ref, list, getDownloadURL, getBlob } from \"firebase/storage\";\nimport { Link } from 'react-router-dom';\nimport { collection, getDocs } from \"firebase/firestore\"; \nimport JSZip from 'jszip';\n\n\n\nfunction Start() {\n  const [imageList, setImageList] = useState([]);\n  console.log(imageList);\n\n  useEffect(() =>{\n    async function fetchData() {\n      const newImages = [];\n      const querySnapshot = await getDocs(collection(db, \"js\"));\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} => ${doc.data().description}`);\n        newImages.push(doc.data());\n      });\n      setImageList(newImages);\n    }\n    fetchData();\n  }, [])\n  async function downloadAndZipImages() {\n    const zip = new JSZip();\n  \n    // Iterate over each image data object\n    for (const imageData of imageList) {\n      try {\n        // Fetch the image\n        const response = await fetch(imageData.url);\n        const blob = await response.blob();\n  \n        // Add the image to the zip file\n        zip.file(`${imageData.description || 'image'}.jpeg`, blob, { binary: true });\n      } catch (error) {\n        console.error('Error downloading image:', error);\n      }\n    }\n  \n    // Generate the zip file\n    const content = await zip.generateAsync({ type: 'blob' });\n  \n    // Create a temporary link to download the zip file\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(content);\n    link.download = 'HochzeitsFotos.zip';\n  \n    // Programmatically click the link to trigger the download\n    link.click();\n  \n    // Clean up\n    URL.revokeObjectURL(link.href);\n  }\n  \n\n  return (\n    <>\n      <div className=\"image-galery\">\n        {\n          imageList.map((element, index) => (\n            <div key={index}>\n            <img src={element.url}></img>\n            <p>{element.description}</p>\n            </div>\n          ))\n        }\n\n      </div>\n      <div className='button-container'>\n\n        <Link to=\"/upload\" className='button'>\n          <div className='upload icon'></div>\n        </Link>\n        <Link to=\"/slideshow\" className='button'><div className='fullscreen icon'></div></Link>\n        <div className='button' onClick={downloadAndZipImages}><div className='download icon'></div></div>\n\n      </div>\n\n    </>\n  );\n}\nexport default Start;\n",{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"77","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":17},{"ruleId":"72","severity":1,"message":"79","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":18,"column":4,"nodeType":"82","endLine":18,"endColumn":6,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":21,"column":5,"nodeType":"86","endLine":21,"endColumn":64},{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":79,"column":22,"nodeType":"89","messageId":"90","endLine":79,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":89,"column":22,"nodeType":"89","messageId":"90","endLine":89,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":92,"column":22,"nodeType":"89","messageId":"90","endLine":92,"endColumn":24},{"ruleId":"87","severity":1,"message":"88","line":100,"column":20,"nodeType":"89","messageId":"90","endLine":100,"endColumn":22},{"ruleId":"87","severity":1,"message":"88","line":104,"column":18,"nodeType":"89","messageId":"90","endLine":104,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":108,"column":18,"nodeType":"89","messageId":"90","endLine":108,"endColumn":20},{"ruleId":"72","severity":1,"message":"77","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"91","line":8,"column":9,"nodeType":"74","messageId":"75","endLine":8,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":37,"column":11,"nodeType":"86","endLine":37,"endColumn":48},{"ruleId":"72","severity":1,"message":"77","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":17},{"ruleId":"72","severity":1,"message":"92","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":20},{"ruleId":"72","severity":1,"message":"93","line":5,"column":22,"nodeType":"74","messageId":"75","endLine":5,"endColumn":25},{"ruleId":"72","severity":1,"message":"94","line":5,"column":27,"nodeType":"74","messageId":"75","endLine":5,"endColumn":31},{"ruleId":"72","severity":1,"message":"95","line":5,"column":33,"nodeType":"74","messageId":"75","endLine":5,"endColumn":47},{"ruleId":"72","severity":1,"message":"96","line":5,"column":49,"nodeType":"74","messageId":"75","endLine":5,"endColumn":56},{"ruleId":"84","severity":1,"message":"85","line":67,"column":13,"nodeType":"86","endLine":67,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Image' is defined but never used.","'storage' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'src._location.path_'. Either include it or remove the dependency array.","ArrayExpression",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'defaultimage' is assigned a value but never used.","'getStorage' is defined but never used.","'ref' is defined but never used.","'list' is defined but never used.","'getDownloadURL' is defined but never used.","'getBlob' is defined but never used.",{"desc":"98","fix":"99"},"Update the dependencies array to be: [src._location.path_]",{"range":"100","text":"101"},[551,553],"[src._location.path_]"]